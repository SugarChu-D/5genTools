#include <iostream>
#include <vector>
#include <string>
#include <iomanip>
#include <cstdint>
using namespace std;

constexpr const char* KEY_NAMES[] = {
    "A", "B", "Select", "Start", "Right", "Left", "Up", "Down", "R", "L", "X", "Y"
};

constexpr uint16_t VALID_KEYPRESSES[] = {
    0x2fff, 0x2ffe, 0x2ffd, 0x2ffc, 0x2ffb, 0x2ffa, 0x2ff9, 0x2ff8, 0x2ff7, 0x2ff6, 0x2ff5, 0x2ff4, 0x2ff3, 0x2ff2, 0x2ff1, 0x2ff0, 
    0x2fef, 0x2fee, 0x2fed, 0x2fec, 0x2feb, 0x2fea, 0x2fe9, 0x2fe8, 0x2fe7, 0x2fe6, 0x2fe5, 0x2fe4, 0x2fe3, 0x2fe2, 0x2fe1, 0x2fe0, 
    0x2fdf, 0x2fde, 0x2fdd, 0x2fdc, 0x2fdb, 0x2fda, 0x2fd9, 0x2fd8, 0x2fd7, 0x2fd6, 0x2fd5, 0x2fd4, 0x2fd3, 0x2fd2, 0x2fd1, 0x2fd0, 
    0x2fbf, 0x2fbe, 0x2fbd, 0x2fbc, 0x2fbb, 0x2fba, 0x2fb9, 0x2fb8, 0x2fb7, 0x2fb6, 0x2fb5, 0x2fb4, 0x2fb3, 0x2fb2, 0x2fb1, 0x2fb0, 
    0x2faf, 0x2fae, 0x2fad, 0x2fac, 0x2fab, 0x2faa, 0x2fa9, 0x2fa8, 0x2fa7, 0x2fa6, 0x2fa5, 0x2fa4, 0x2fa3, 0x2fa2, 0x2fa1, 0x2fa0, 
    0x2f9f, 0x2f9e, 0x2f9d, 0x2f9c, 0x2f9b, 0x2f9a, 0x2f99, 0x2f98, 0x2f97, 0x2f96, 0x2f95, 0x2f94, 0x2f93, 0x2f92, 0x2f91, 0x2f90, 
    0x2f7f, 0x2f7e, 0x2f7d, 0x2f7c, 0x2f7b, 0x2f7a, 0x2f79, 0x2f78, 0x2f77, 0x2f76, 0x2f75, 0x2f74, 0x2f73, 0x2f72, 0x2f71, 0x2f70, 
    0x2f6f, 0x2f6e, 0x2f6d, 0x2f6c, 0x2f6b, 0x2f6a, 0x2f69, 0x2f68, 0x2f67, 0x2f66, 0x2f65, 0x2f64, 0x2f63, 0x2f62, 0x2f61, 0x2f60, 
    0x2f5f, 0x2f5e, 0x2f5d, 0x2f5c, 0x2f5b, 0x2f5a, 0x2f59, 0x2f58, 0x2f57, 0x2f56, 0x2f55, 0x2f54, 0x2f53, 0x2f52, 0x2f51, 0x2f50, 
    0x2eff, 0x2efe, 0x2efd, 0x2efc, 0x2efb, 0x2efa, 0x2ef9, 0x2ef8, 0x2ef7, 0x2ef6, 0x2ef5, 0x2ef4, 0x2ef3, 0x2ef2, 0x2ef1, 0x2ef0, 
    0x2eef, 0x2eee, 0x2eed, 0x2eec, 0x2eeb, 0x2eea, 0x2ee9, 0x2ee8, 0x2ee7, 0x2ee6, 0x2ee5, 0x2ee4, 0x2ee3, 0x2ee2, 0x2ee1, 0x2ee0, 
    0x2edf, 0x2ede, 0x2edd, 0x2edc, 0x2edb, 0x2eda, 0x2ed9, 0x2ed8, 0x2ed7, 0x2ed6, 0x2ed5, 0x2ed4, 0x2ed3, 0x2ed2, 0x2ed1, 0x2ed0, 
    0x2ebf, 0x2ebe, 0x2ebd, 0x2ebc, 0x2ebb, 0x2eba, 0x2eb9, 0x2eb8, 0x2eb7, 0x2eb6, 0x2eb5, 0x2eb4, 0x2eb3, 0x2eb2, 0x2eb1, 0x2eb0, 
    0x2eaf, 0x2eae, 0x2ead, 0x2eac, 0x2eab, 0x2eaa, 0x2ea9, 0x2ea8, 0x2ea7, 0x2ea6, 0x2ea5, 0x2ea4, 0x2ea3, 0x2ea2, 0x2ea1, 0x2ea0, 
    0x2e9f, 0x2e9e, 0x2e9d, 0x2e9c, 0x2e9b, 0x2e9a, 0x2e99, 0x2e98, 0x2e97, 0x2e96, 0x2e95, 0x2e94, 0x2e93, 0x2e92, 0x2e91, 0x2e90, 
    0x2e7f, 0x2e7e, 0x2e7d, 0x2e7c, 0x2e7b, 0x2e7a, 0x2e79, 0x2e78, 0x2e77, 0x2e76, 0x2e75, 0x2e74, 0x2e73, 0x2e72, 0x2e71, 0x2e70, 
    0x2e6f, 0x2e6e, 0x2e6d, 0x2e6c, 0x2e6b, 0x2e6a, 0x2e69, 0x2e68, 0x2e67, 0x2e66, 0x2e65, 0x2e64, 0x2e63, 0x2e62, 0x2e61, 0x2e60, 
    0x2e5f, 0x2e5e, 0x2e5d, 0x2e5c, 0x2e5b, 0x2e5a, 0x2e59, 0x2e58, 0x2e57, 0x2e56, 0x2e55, 0x2e54, 0x2e53, 0x2e52, 0x2e51, 0x2e50, 
    0x2dff, 0x2dfe, 0x2dfd, 0x2dfc, 0x2dfb, 0x2dfa, 0x2df9, 0x2df8, 0x2df7, 0x2df6, 0x2df5, 0x2df4, 0x2df3, 0x2df2, 0x2df1, 0x2df0, 
    0x2def, 0x2dee, 0x2ded, 0x2dec, 0x2deb, 0x2dea, 0x2de9, 0x2de8, 0x2de7, 0x2de6, 0x2de5, 0x2de4, 0x2de3, 0x2de2, 0x2de1, 0x2de0, 
    0x2ddf, 0x2dde, 0x2ddd, 0x2ddc, 0x2ddb, 0x2dda, 0x2dd9, 0x2dd8, 0x2dd7, 0x2dd6, 0x2dd5, 0x2dd4, 0x2dd3, 0x2dd2, 0x2dd1, 0x2dd0, 
    0x2dbf, 0x2dbe, 0x2dbd, 0x2dbc, 0x2dbb, 0x2dba, 0x2db9, 0x2db8, 0x2db7, 0x2db6, 0x2db5, 0x2db4, 0x2db3, 0x2db2, 0x2db1, 0x2db0, 
    0x2daf, 0x2dae, 0x2dad, 0x2dac, 0x2dab, 0x2daa, 0x2da9, 0x2da8, 0x2da7, 0x2da6, 0x2da5, 0x2da4, 0x2da3, 0x2da2, 0x2da1, 0x2da0, 
    0x2d9f, 0x2d9e, 0x2d9d, 0x2d9c, 0x2d9b, 0x2d9a, 0x2d99, 0x2d98, 0x2d97, 0x2d96, 0x2d95, 0x2d94, 0x2d93, 0x2d92, 0x2d91, 0x2d90, 
    0x2d7f, 0x2d7e, 0x2d7d, 0x2d7c, 0x2d7b, 0x2d7a, 0x2d79, 0x2d78, 0x2d77, 0x2d76, 0x2d75, 0x2d74, 0x2d73, 0x2d72, 0x2d71, 0x2d70, 
    0x2d6f, 0x2d6e, 0x2d6d, 0x2d6c, 0x2d6b, 0x2d6a, 0x2d69, 0x2d68, 0x2d67, 0x2d66, 0x2d65, 0x2d64, 0x2d63, 0x2d62, 0x2d61, 0x2d60, 
    0x2d5f, 0x2d5e, 0x2d5d, 0x2d5c, 0x2d5b, 0x2d5a, 0x2d59, 0x2d58, 0x2d57, 0x2d56, 0x2d55, 0x2d54, 0x2d53, 0x2d52, 0x2d51, 0x2d50, 
    0x2cff, 0x2cfe, 0x2cfd, 0x2cfc, 0x2cfb, 0x2cfa, 0x2cf9, 0x2cf8, 0x2cf7, 0x2cf6, 0x2cf5, 0x2cf4, 0x2cef, 0x2cee, 0x2ced, 0x2cec, 
    0x2ceb, 0x2cea, 0x2ce9, 0x2ce8, 0x2ce7, 0x2ce6, 0x2ce5, 0x2ce4, 0x2cdf, 0x2cde, 0x2cdd, 0x2cdc, 0x2cdb, 0x2cda, 0x2cd9, 0x2cd8, 
    0x2cd7, 0x2cd6, 0x2cd5, 0x2cd4, 0x2cbf, 0x2cbe, 0x2cbd, 0x2cbc, 0x2cbb, 0x2cba, 0x2cb9, 0x2cb8, 0x2cb7, 0x2cb6, 0x2cb5, 0x2cb4, 
    0x2caf, 0x2cae, 0x2cad, 0x2cac, 0x2cab, 0x2caa, 0x2ca9, 0x2ca8, 0x2ca7, 0x2ca6, 0x2ca5, 0x2ca4, 0x2c9f, 0x2c9e, 0x2c9d, 0x2c9c, 
    0x2c9b, 0x2c9a, 0x2c99, 0x2c98, 0x2c97, 0x2c96, 0x2c95, 0x2c94, 0x2c7f, 0x2c7e, 0x2c7d, 0x2c7c, 0x2c7b, 0x2c7a, 0x2c79, 0x2c78, 
    0x2c77, 0x2c76, 0x2c75, 0x2c74, 0x2c6f, 0x2c6e, 0x2c6d, 0x2c6c, 0x2c6b, 0x2c6a, 0x2c69, 0x2c68, 0x2c67, 0x2c66, 0x2c65, 0x2c64, 
    0x2c5f, 0x2c5e, 0x2c5d, 0x2c5c, 0x2c5b, 0x2c5a, 0x2c59, 0x2c58, 0x2c57, 0x2c56, 0x2c55, 0x2c54, 0x2bff, 0x2bfe, 0x2bfd, 0x2bfc, 
    0x2bfb, 0x2bfa, 0x2bf9, 0x2bf8, 0x2bf7, 0x2bf6, 0x2bf5, 0x2bf4, 0x2bf3, 0x2bf2, 0x2bf1, 0x2bf0, 0x2bef, 0x2bee, 0x2bed, 0x2bec, 
    0x2beb, 0x2bea, 0x2be9, 0x2be8, 0x2be7, 0x2be6, 0x2be5, 0x2be4, 0x2be3, 0x2be2, 0x2be1, 0x2be0, 0x2bdf, 0x2bde, 0x2bdd, 0x2bdc, 
    0x2bdb, 0x2bda, 0x2bd9, 0x2bd8, 0x2bd7, 0x2bd6, 0x2bd5, 0x2bd4, 0x2bd3, 0x2bd2, 0x2bd1, 0x2bd0, 0x2bbf, 0x2bbe, 0x2bbd, 0x2bbc, 
    0x2bbb, 0x2bba, 0x2bb9, 0x2bb8, 0x2bb7, 0x2bb6, 0x2bb5, 0x2bb4, 0x2bb3, 0x2bb2, 0x2bb1, 0x2bb0, 0x2baf, 0x2bae, 0x2bad, 0x2bac, 
    0x2bab, 0x2baa, 0x2ba9, 0x2ba8, 0x2ba7, 0x2ba6, 0x2ba5, 0x2ba4, 0x2ba3, 0x2ba2, 0x2ba1, 0x2ba0, 0x2b9f, 0x2b9e, 0x2b9d, 0x2b9c, 
    0x2b9b, 0x2b9a, 0x2b99, 0x2b98, 0x2b97, 0x2b96, 0x2b95, 0x2b94, 0x2b93, 0x2b92, 0x2b91, 0x2b90, 0x2b7f, 0x2b7e, 0x2b7d, 0x2b7c, 
    0x2b7b, 0x2b7a, 0x2b79, 0x2b78, 0x2b77, 0x2b76, 0x2b75, 0x2b74, 0x2b73, 0x2b72, 0x2b71, 0x2b70, 0x2b6f, 0x2b6e, 0x2b6d, 0x2b6c, 
    0x2b6b, 0x2b6a, 0x2b69, 0x2b68, 0x2b67, 0x2b66, 0x2b65, 0x2b64, 0x2b63, 0x2b62, 0x2b61, 0x2b60, 0x2b5f, 0x2b5e, 0x2b5d, 0x2b5c, 
    0x2b5b, 0x2b5a, 0x2b59, 0x2b58, 0x2b57, 0x2b56, 0x2b55, 0x2b54, 0x2b53, 0x2b52, 0x2b51, 0x2b50, 0x2aff, 0x2afe, 0x2afd, 0x2afc, 
    0x2afb, 0x2afa, 0x2af9, 0x2af8, 0x2af7, 0x2af6, 0x2af5, 0x2af4, 0x2af3, 0x2af2, 0x2af1, 0x2af0, 0x2aef, 0x2aee, 0x2aed, 0x2aec, 
    0x2aeb, 0x2aea, 0x2ae9, 0x2ae8, 0x2ae7, 0x2ae6, 0x2ae5, 0x2ae4, 0x2ae3, 0x2ae2, 0x2ae1, 0x2ae0, 0x2adf, 0x2ade, 0x2add, 0x2adc, 
    0x2adb, 0x2ada, 0x2ad9, 0x2ad8, 0x2ad7, 0x2ad6, 0x2ad5, 0x2ad4, 0x2ad3, 0x2ad2, 0x2ad1, 0x2ad0, 0x2abf, 0x2abe, 0x2abd, 0x2abc, 
    0x2abb, 0x2aba, 0x2ab9, 0x2ab8, 0x2ab7, 0x2ab6, 0x2ab5, 0x2ab4, 0x2ab3, 0x2ab2, 0x2ab1, 0x2ab0, 0x2aaf, 0x2aae, 0x2aad, 0x2aac, 
    0x2aab, 0x2aaa, 0x2aa9, 0x2aa8, 0x2aa7, 0x2aa6, 0x2aa5, 0x2aa4, 0x2aa3, 0x2aa2, 0x2aa1, 0x2aa0, 0x2a9f, 0x2a9e, 0x2a9d, 0x2a9c, 
    0x2a9b, 0x2a9a, 0x2a99, 0x2a98, 0x2a97, 0x2a96, 0x2a95, 0x2a94, 0x2a93, 0x2a92, 0x2a91, 0x2a90, 0x2a7f, 0x2a7e, 0x2a7d, 0x2a7c, 
    0x2a7b, 0x2a7a, 0x2a79, 0x2a78, 0x2a77, 0x2a76, 0x2a75, 0x2a74, 0x2a73, 0x2a72, 0x2a71, 0x2a70, 0x2a6f, 0x2a6e, 0x2a6d, 0x2a6c, 
    0x2a6b, 0x2a6a, 0x2a69, 0x2a68, 0x2a67, 0x2a66, 0x2a65, 0x2a64, 0x2a63, 0x2a62, 0x2a61, 0x2a60, 0x2a5f, 0x2a5e, 0x2a5d, 0x2a5c, 
    0x2a5b, 0x2a5a, 0x2a59, 0x2a58, 0x2a57, 0x2a56, 0x2a55, 0x2a54, 0x2a53, 0x2a52, 0x2a51, 0x2a50, 0x29ff, 0x29fe, 0x29fd, 0x29fc, 
    0x29fb, 0x29fa, 0x29f9, 0x29f8, 0x29f7, 0x29f6, 0x29f5, 0x29f4, 0x29f3, 0x29f2, 0x29f1, 0x29f0, 0x29ef, 0x29ee, 0x29ed, 0x29ec, 
    0x29eb, 0x29ea, 0x29e9, 0x29e8, 0x29e7, 0x29e6, 0x29e5, 0x29e4, 0x29e3, 0x29e2, 0x29e1, 0x29e0, 0x29df, 0x29de, 0x29dd, 0x29dc, 
    0x29db, 0x29da, 0x29d9, 0x29d8, 0x29d7, 0x29d6, 0x29d5, 0x29d4, 0x29d3, 0x29d2, 0x29d1, 0x29d0, 0x29bf, 0x29be, 0x29bd, 0x29bc, 
    0x29bb, 0x29ba, 0x29b9, 0x29b8, 0x29b7, 0x29b6, 0x29b5, 0x29b4, 0x29b3, 0x29b2, 0x29b1, 0x29b0, 0x29af, 0x29ae, 0x29ad, 0x29ac, 
    0x29ab, 0x29aa, 0x29a9, 0x29a8, 0x29a7, 0x29a6, 0x29a5, 0x29a4, 0x29a3, 0x29a2, 0x29a1, 0x29a0, 0x299f, 0x299e, 0x299d, 0x299c, 
    0x299b, 0x299a, 0x2999, 0x2998, 0x2997, 0x2996, 0x2995, 0x2994, 0x2993, 0x2992, 0x2991, 0x2990, 0x297f, 0x297e, 0x297d, 0x297c, 
    0x297b, 0x297a, 0x2979, 0x2978, 0x2977, 0x2976, 0x2975, 0x2974, 0x2973, 0x2972, 0x2971, 0x2970, 0x296f, 0x296e, 0x296d, 0x296c, 
    0x296b, 0x296a, 0x2969, 0x2968, 0x2967, 0x2966, 0x2965, 0x2964, 0x2963, 0x2962, 0x2961, 0x2960, 0x295f, 0x295e, 0x295d, 0x295c, 
    0x295b, 0x295a, 0x2959, 0x2958, 0x2957, 0x2956, 0x2955, 0x2954, 0x2953, 0x2952, 0x2951, 0x2950, 0x28ff, 0x28fe, 0x28fd, 0x28fc, 
    0x28fb, 0x28fa, 0x28f9, 0x28f8, 0x28f7, 0x28f6, 0x28f5, 0x28f4, 0x28ef, 0x28ee, 0x28ed, 0x28ec, 0x28eb, 0x28ea, 0x28e9, 0x28e8, 
    0x28e7, 0x28e6, 0x28e5, 0x28e4, 0x28df, 0x28de, 0x28dd, 0x28dc, 0x28db, 0x28da, 0x28d9, 0x28d8, 0x28d7, 0x28d6, 0x28d5, 0x28d4, 
    0x28bf, 0x28be, 0x28bd, 0x28bc, 0x28bb, 0x28ba, 0x28b9, 0x28b8, 0x28b7, 0x28b6, 0x28b5, 0x28b4, 0x28af, 0x28ae, 0x28ad, 0x28ac, 
    0x28ab, 0x28aa, 0x28a9, 0x28a8, 0x28a7, 0x28a6, 0x28a5, 0x28a4, 0x289f, 0x289e, 0x289d, 0x289c, 0x289b, 0x289a, 0x2899, 0x2898, 
    0x2897, 0x2896, 0x2895, 0x2894, 0x287f, 0x287e, 0x287d, 0x287c, 0x287b, 0x287a, 0x2879, 0x2878, 0x2877, 0x2876, 0x2875, 0x2874, 
    0x286f, 0x286e, 0x286d, 0x286c, 0x286b, 0x286a, 0x2869, 0x2868, 0x2867, 0x2866, 0x2865, 0x2864, 0x285f, 0x285e, 0x285d, 0x285c, 
    0x285b, 0x285a, 0x2859, 0x2858, 0x2857, 0x2856, 0x2855, 0x2854, 0x27ff, 0x27fe, 0x27fd, 0x27fc, 0x27fb, 0x27fa, 0x27f9, 0x27f8, 
    0x27f7, 0x27f6, 0x27f5, 0x27f4, 0x27f3, 0x27f2, 0x27f1, 0x27f0, 0x27ef, 0x27ee, 0x27ed, 0x27ec, 0x27eb, 0x27ea, 0x27e9, 0x27e8, 
    0x27e7, 0x27e6, 0x27e5, 0x27e4, 0x27e3, 0x27e2, 0x27e1, 0x27e0, 0x27df, 0x27de, 0x27dd, 0x27dc, 0x27db, 0x27da, 0x27d9, 0x27d8, 
    0x27d7, 0x27d6, 0x27d5, 0x27d4, 0x27d3, 0x27d2, 0x27d1, 0x27d0, 0x27bf, 0x27be, 0x27bd, 0x27bc, 0x27bb, 0x27ba, 0x27b9, 0x27b8, 
    0x27b7, 0x27b6, 0x27b5, 0x27b4, 0x27b3, 0x27b2, 0x27b1, 0x27b0, 0x27af, 0x27ae, 0x27ad, 0x27ac, 0x27ab, 0x27aa, 0x27a9, 0x27a8, 
    0x27a7, 0x27a6, 0x27a5, 0x27a4, 0x27a3, 0x27a2, 0x27a1, 0x27a0, 0x279f, 0x279e, 0x279d, 0x279c, 0x279b, 0x279a, 0x2799, 0x2798, 
    0x2797, 0x2796, 0x2795, 0x2794, 0x2793, 0x2792, 0x2791, 0x2790, 0x277f, 0x277e, 0x277d, 0x277c, 0x277b, 0x277a, 0x2779, 0x2778, 
    0x2777, 0x2776, 0x2775, 0x2774, 0x2773, 0x2772, 0x2771, 0x2770, 0x276f, 0x276e, 0x276d, 0x276c, 0x276b, 0x276a, 0x2769, 0x2768, 
    0x2767, 0x2766, 0x2765, 0x2764, 0x2763, 0x2762, 0x2761, 0x2760, 0x275f, 0x275e, 0x275d, 0x275c, 0x275b, 0x275a, 0x2759, 0x2758, 
    0x2757, 0x2756, 0x2755, 0x2754, 0x2753, 0x2752, 0x2751, 0x2750, 0x26ff, 0x26fe, 0x26fd, 0x26fc, 0x26fb, 0x26fa, 0x26f9, 0x26f8, 
    0x26f7, 0x26f6, 0x26f5, 0x26f4, 0x26f3, 0x26f2, 0x26f1, 0x26f0, 0x26ef, 0x26ee, 0x26ed, 0x26ec, 0x26eb, 0x26ea, 0x26e9, 0x26e8, 
    0x26e7, 0x26e6, 0x26e5, 0x26e4, 0x26e3, 0x26e2, 0x26e1, 0x26e0, 0x26df, 0x26de, 0x26dd, 0x26dc, 0x26db, 0x26da, 0x26d9, 0x26d8, 
    0x26d7, 0x26d6, 0x26d5, 0x26d4, 0x26d3, 0x26d2, 0x26d1, 0x26d0, 0x26bf, 0x26be, 0x26bd, 0x26bc, 0x26bb, 0x26ba, 0x26b9, 0x26b8, 
    0x26b7, 0x26b6, 0x26b5, 0x26b4, 0x26b3, 0x26b2, 0x26b1, 0x26b0, 0x26af, 0x26ae, 0x26ad, 0x26ac, 0x26ab, 0x26aa, 0x26a9, 0x26a8, 
    0x26a7, 0x26a6, 0x26a5, 0x26a4, 0x26a3, 0x26a2, 0x26a1, 0x26a0, 0x269f, 0x269e, 0x269d, 0x269c, 0x269b, 0x269a, 0x2699, 0x2698, 
    0x2697, 0x2696, 0x2695, 0x2694, 0x2693, 0x2692, 0x2691, 0x2690, 0x267f, 0x267e, 0x267d, 0x267c, 0x267b, 0x267a, 0x2679, 0x2678, 
    0x2677, 0x2676, 0x2675, 0x2674, 0x2673, 0x2672, 0x2671, 0x2670, 0x266f, 0x266e, 0x266d, 0x266c, 0x266b, 0x266a, 0x2669, 0x2668, 
    0x2667, 0x2666, 0x2665, 0x2664, 0x2663, 0x2662, 0x2661, 0x2660, 0x265f, 0x265e, 0x265d, 0x265c, 0x265b, 0x265a, 0x2659, 0x2658, 
    0x2657, 0x2656, 0x2655, 0x2654, 0x2653, 0x2652, 0x2651, 0x2650, 0x25ff, 0x25fe, 0x25fd, 0x25fc, 0x25fb, 0x25fa, 0x25f9, 0x25f8, 
    0x25f7, 0x25f6, 0x25f5, 0x25f4, 0x25f3, 0x25f2, 0x25f1, 0x25f0, 0x25ef, 0x25ee, 0x25ed, 0x25ec, 0x25eb, 0x25ea, 0x25e9, 0x25e8, 
    0x25e7, 0x25e6, 0x25e5, 0x25e4, 0x25e3, 0x25e2, 0x25e1, 0x25e0, 0x25df, 0x25de, 0x25dd, 0x25dc, 0x25db, 0x25da, 0x25d9, 0x25d8, 
    0x25d7, 0x25d6, 0x25d5, 0x25d4, 0x25d3, 0x25d2, 0x25d1, 0x25d0, 0x25bf, 0x25be, 0x25bd, 0x25bc, 0x25bb, 0x25ba, 0x25b9, 0x25b8, 
    0x25b7, 0x25b6, 0x25b5, 0x25b4, 0x25b3, 0x25b2, 0x25b1, 0x25b0, 0x25af, 0x25ae, 0x25ad, 0x25ac, 0x25ab, 0x25aa, 0x25a9, 0x25a8, 
    0x25a7, 0x25a6, 0x25a5, 0x25a4, 0x25a3, 0x25a2, 0x25a1, 0x25a0, 0x259f, 0x259e, 0x259d, 0x259c, 0x259b, 0x259a, 0x2599, 0x2598, 
    0x2597, 0x2596, 0x2595, 0x2594, 0x2593, 0x2592, 0x2591, 0x2590, 0x257f, 0x257e, 0x257d, 0x257c, 0x257b, 0x257a, 0x2579, 0x2578, 
    0x2577, 0x2576, 0x2575, 0x2574, 0x2573, 0x2572, 0x2571, 0x2570, 0x256f, 0x256e, 0x256d, 0x256c, 0x256b, 0x256a, 0x2569, 0x2568, 
    0x2567, 0x2566, 0x2565, 0x2564, 0x2563, 0x2562, 0x2561, 0x2560, 0x255f, 0x255e, 0x255d, 0x255c, 0x255b, 0x255a, 0x2559, 0x2558, 
    0x2557, 0x2556, 0x2555, 0x2554, 0x2553, 0x2552, 0x2551, 0x2550, 0x24ff, 0x24fe, 0x24fd, 0x24fc, 0x24fb, 0x24fa, 0x24f9, 0x24f8, 
    0x24f7, 0x24f6, 0x24f5, 0x24f4, 0x24ef, 0x24ee, 0x24ed, 0x24ec, 0x24eb, 0x24ea, 0x24e9, 0x24e8, 0x24e7, 0x24e6, 0x24e5, 0x24e4, 
    0x24df, 0x24de, 0x24dd, 0x24dc, 0x24db, 0x24da, 0x24d9, 0x24d8, 0x24d7, 0x24d6, 0x24d5, 0x24d4, 0x24bf, 0x24be, 0x24bd, 0x24bc, 
    0x24bb, 0x24ba, 0x24b9, 0x24b8, 0x24b7, 0x24b6, 0x24b5, 0x24b4, 0x24af, 0x24ae, 0x24ad, 0x24ac, 0x24ab, 0x24aa, 0x24a9, 0x24a8, 
    0x24a7, 0x24a6, 0x24a5, 0x24a4, 0x249f, 0x249e, 0x249d, 0x249c, 0x249b, 0x249a, 0x2499, 0x2498, 0x2497, 0x2496, 0x2495, 0x2494, 
    0x247f, 0x247e, 0x247d, 0x247c, 0x247b, 0x247a, 0x2479, 0x2478, 0x2477, 0x2476, 0x2475, 0x2474, 0x246f, 0x246e, 0x246d, 0x246c, 
    0x246b, 0x246a, 0x2469, 0x2468, 0x2467, 0x2466, 0x2465, 0x2464, 0x245f, 0x245e, 0x245d, 0x245c, 0x245b, 0x245a, 0x2459, 0x2458, 
    0x2457, 0x2456, 0x2455, 0x2454, 0x23ff, 0x23fe, 0x23fd, 0x23fc, 0x23fb, 0x23fa, 0x23f9, 0x23f8, 0x23f7, 0x23f6, 0x23f5, 0x23f4, 
    0x23f3, 0x23f2, 0x23f1, 0x23f0, 0x23ef, 0x23ee, 0x23ed, 0x23ec, 0x23eb, 0x23ea, 0x23e9, 0x23e8, 0x23e7, 0x23e6, 0x23e5, 0x23e4, 
    0x23e3, 0x23e2, 0x23e1, 0x23e0, 0x23df, 0x23de, 0x23dd, 0x23dc, 0x23db, 0x23da, 0x23d9, 0x23d8, 0x23d7, 0x23d6, 0x23d5, 0x23d4, 
    0x23d3, 0x23d2, 0x23d1, 0x23d0, 0x23bf, 0x23be, 0x23bd, 0x23bc, 0x23bb, 0x23ba, 0x23b9, 0x23b8, 0x23b7, 0x23b6, 0x23b5, 0x23b4, 
    0x23b3, 0x23b2, 0x23b1, 0x23b0, 0x23af, 0x23ae, 0x23ad, 0x23ac, 0x23ab, 0x23aa, 0x23a9, 0x23a8, 0x23a7, 0x23a6, 0x23a5, 0x23a4, 
    0x23a3, 0x23a2, 0x23a1, 0x23a0, 0x239f, 0x239e, 0x239d, 0x239c, 0x239b, 0x239a, 0x2399, 0x2398, 0x2397, 0x2396, 0x2395, 0x2394, 
    0x2393, 0x2392, 0x2391, 0x2390, 0x237f, 0x237e, 0x237d, 0x237c, 0x237b, 0x237a, 0x2379, 0x2378, 0x2377, 0x2376, 0x2375, 0x2374, 
    0x2373, 0x2372, 0x2371, 0x2370, 0x236f, 0x236e, 0x236d, 0x236c, 0x236b, 0x236a, 0x2369, 0x2368, 0x2367, 0x2366, 0x2365, 0x2364, 
    0x2363, 0x2362, 0x2361, 0x2360, 0x235f, 0x235e, 0x235d, 0x235c, 0x235b, 0x235a, 0x2359, 0x2358, 0x2357, 0x2356, 0x2355, 0x2354, 
    0x2353, 0x2352, 0x2351, 0x2350, 0x22ff, 0x22fe, 0x22fd, 0x22fc, 0x22fb, 0x22fa, 0x22f9, 0x22f8, 0x22f7, 0x22f6, 0x22f5, 0x22f4, 
    0x22f3, 0x22f2, 0x22f1, 0x22f0, 0x22ef, 0x22ee, 0x22ed, 0x22ec, 0x22eb, 0x22ea, 0x22e9, 0x22e8, 0x22e7, 0x22e6, 0x22e5, 0x22e4, 
    0x22e3, 0x22e2, 0x22e1, 0x22e0, 0x22df, 0x22de, 0x22dd, 0x22dc, 0x22db, 0x22da, 0x22d9, 0x22d8, 0x22d7, 0x22d6, 0x22d5, 0x22d4, 
    0x22d3, 0x22d2, 0x22d1, 0x22d0, 0x22bf, 0x22be, 0x22bd, 0x22bc, 0x22bb, 0x22ba, 0x22b9, 0x22b8, 0x22b7, 0x22b6, 0x22b5, 0x22b4, 
    0x22b3, 0x22b2, 0x22b1, 0x22b0, 0x22af, 0x22ae, 0x22ad, 0x22ac, 0x22ab, 0x22aa, 0x22a9, 0x22a8, 0x22a7, 0x22a6, 0x22a5, 0x22a4, 
    0x22a3, 0x22a2, 0x22a1, 0x22a0, 0x229f, 0x229e, 0x229d, 0x229c, 0x229b, 0x229a, 0x2299, 0x2298, 0x2297, 0x2296, 0x2295, 0x2294, 
    0x2293, 0x2292, 0x2291, 0x2290, 0x227f, 0x227e, 0x227d, 0x227c, 0x227b, 0x227a, 0x2279, 0x2278, 0x2277, 0x2276, 0x2275, 0x2274, 
    0x2273, 0x2272, 0x2271, 0x2270, 0x226f, 0x226e, 0x226d, 0x226c, 0x226b, 0x226a, 0x2269, 0x2268, 0x2267, 0x2266, 0x2265, 0x2264, 
    0x2263, 0x2262, 0x2261, 0x2260, 0x225f, 0x225e, 0x225d, 0x225c, 0x225b, 0x225a, 0x2259, 0x2258, 0x2257, 0x2256, 0x2255, 0x2254, 
    0x2253, 0x2252, 0x2251, 0x2250, 0x21ff, 0x21fe, 0x21fd, 0x21fc, 0x21fb, 0x21fa, 0x21f9, 0x21f8, 0x21f7, 0x21f6, 0x21f5, 0x21f4, 
    0x21f3, 0x21f2, 0x21f1, 0x21f0, 0x21ef, 0x21ee, 0x21ed, 0x21ec, 0x21eb, 0x21ea, 0x21e9, 0x21e8, 0x21e7, 0x21e6, 0x21e5, 0x21e4, 
    0x21e3, 0x21e2, 0x21e1, 0x21e0, 0x21df, 0x21de, 0x21dd, 0x21dc, 0x21db, 0x21da, 0x21d9, 0x21d8, 0x21d7, 0x21d6, 0x21d5, 0x21d4, 
    0x21d3, 0x21d2, 0x21d1, 0x21d0, 0x21bf, 0x21be, 0x21bd, 0x21bc, 0x21bb, 0x21ba, 0x21b9, 0x21b8, 0x21b7, 0x21b6, 0x21b5, 0x21b4, 
    0x21b3, 0x21b2, 0x21b1, 0x21b0, 0x21af, 0x21ae, 0x21ad, 0x21ac, 0x21ab, 0x21aa, 0x21a9, 0x21a8, 0x21a7, 0x21a6, 0x21a5, 0x21a4, 
    0x21a3, 0x21a2, 0x21a1, 0x21a0, 0x219f, 0x219e, 0x219d, 0x219c, 0x219b, 0x219a, 0x2199, 0x2198, 0x2197, 0x2196, 0x2195, 0x2194, 
    0x2193, 0x2192, 0x2191, 0x2190, 0x217f, 0x217e, 0x217d, 0x217c, 0x217b, 0x217a, 0x2179, 0x2178, 0x2177, 0x2176, 0x2175, 0x2174, 
    0x2173, 0x2172, 0x2171, 0x2170, 0x216f, 0x216e, 0x216d, 0x216c, 0x216b, 0x216a, 0x2169, 0x2168, 0x2167, 0x2166, 0x2165, 0x2164, 
    0x2163, 0x2162, 0x2161, 0x2160, 0x215f, 0x215e, 0x215d, 0x215c, 0x215b, 0x215a, 0x2159, 0x2158, 0x2157, 0x2156, 0x2155, 0x2154, 
    0x2153, 0x2152, 0x2151, 0x2150, 0x20ff, 0x20fe, 0x20fd, 0x20fc, 0x20fb, 0x20fa, 0x20f9, 0x20f8, 0x20f7, 0x20f6, 0x20f5, 0x20f4, 
    0x20ef, 0x20ee, 0x20ed, 0x20ec, 0x20eb, 0x20ea, 0x20e9, 0x20e8, 0x20e7, 0x20e6, 0x20e5, 0x20e4, 0x20df, 0x20de, 0x20dd, 0x20dc, 
    0x20db, 0x20da, 0x20d9, 0x20d8, 0x20d7, 0x20d6, 0x20d5, 0x20d4, 0x20bf, 0x20be, 0x20bd, 0x20bc, 0x20bb, 0x20ba, 0x20b9, 0x20b8, 
    0x20b7, 0x20b6, 0x20b5, 0x20b4, 0x20af, 0x20ae, 0x20ad, 0x20ac, 0x20ab, 0x20aa, 0x20a9, 0x20a8, 0x20a7, 0x20a6, 0x20a5, 0x20a4, 
    0x209f, 0x209e, 0x209d, 0x209c, 0x209b, 0x209a, 0x2099, 0x2098, 0x2097, 0x2096, 0x2095, 0x2094, 0x207f, 0x207e, 0x207d, 0x207c, 
    0x207b, 0x207a, 0x2079, 0x2078, 0x2077, 0x2076, 0x2075, 0x2074, 0x206f, 0x206e, 0x206d, 0x206c, 0x206b, 0x206a, 0x2069, 0x2068, 
    0x2067, 0x2066, 0x2065, 0x2064, 0x205f, 0x205e, 0x205d, 0x205c, 0x205b, 0x205a, 0x2059, 0x2058, 0x2057, 0x2056, 0x2055, 0x2054
};

constexpr size_t VALID_KEYPRESS_COUNT = 2140;

inline vector<string> getKeysFromBits(uint16_t bits) {
    vector<string> keys;
    keys.reserve(12);
    for (int i = 0; i < 12; i++) {
        if (!(bits & (1 << i))) {
            keys.emplace_back(KEY_NAMES[i]);
        }
    }
    return keys;
}

void printKeypressStats() {
    cout << "Array-based Keypress Statistics:" << endl;
    cout << "  Total valid keypresses: " << VALID_KEYPRESS_COUNT << endl;
    cout << "  Memory usage: " << (sizeof(VALID_KEYPRESSES) / 1024.0) << " KB" << endl;
    cout << "  Performance: O(1) direct array access" << endl;
}
